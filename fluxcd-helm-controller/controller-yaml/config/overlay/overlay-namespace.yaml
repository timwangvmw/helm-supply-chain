#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"kind": "Namespace"})
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "Role", "metadata": {"name": "leader-election-role"}})
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.namespace
  name: #@ "{}-leader-election-role".format("helm")

#@overlay/match by=overlay.subset({"kind": "RoleBinding", "metadata": {"name": "leader-election-rolebinding"}})
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.namespace
  name: #@ "{}-leader-election-rolebinding".format("helm")
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: #@ "{}-leader-election-role".format("helm")
subjects:
  #@overlay/match by=overlay.subset({"kind": "ServiceAccount"}), expects=1
  - kind: ServiceAccount
    name: default
    namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "ClusterRole", "metadata": {"name": "manager-role"}})
---
metadata:
  name: #@ "{}-manager-role".format("helm")

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding", "metadata": {"name": "manager-rolebinding"}})
---
metadata:
  name: #@ "{}-manager-rolebinding".format("helm")
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ "{}-manager-role".format("helm")
subjects:
  #@overlay/match by=overlay.subset({"kind": "ServiceAccount"}), expects=1
  - kind: ServiceAccount
    name: default
    namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "ClusterRole", "metadata": {"name": "reconciler-role"}})
---
metadata:
  name: #@ "{}-reconciler-role".format("helm")

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding", "metadata": {"name": "reconciler-rolebinding"}})
---
metadata:
  name: #@ "{}-reconciler-rolebinding".format("helm")
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: #@ "{}-reconciler-role".format("helm")
subjects:
  #@overlay/match by=overlay.subset({"kind": "ServiceAccount"}), expects=1
  - kind: ServiceAccount
    name: default
    #@overlay/match missing_ok=True
    namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "helm-controller"}})
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.namespace